---
# Single threaded updates to measure commit latency for various write concern.

SchemaVersion: 2018-07-01
Owner: "@mongodb/product-perf"

# All of the below is really just the same actor, but as Genny reports statistics using the actor
# name, we need a different actor instance for each configuration. All of the below run in their
# own slot, nothing is concurrent.
Actors:
  - Name: Load
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
        # Drop
      - Repeat: 1
        Operations:
          - OperationName: RunCommand
            OperationCommand:
                drop: &Collection CommitLatencySingleUpdates
        # Load data
      - Repeat: 1
        Operations:
          - OperationName: RunCommand
            OperationCommand:
                insert: *Collection
                documents: [{_id: 1, n: 0}]
      - &Nop
        Operation:
          OperationName: Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop


  - Name: SingleThreadUpdate_w0
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern: { w: 0 }
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_w1
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: 1 }
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_w2
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: 2 }
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_w3
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: 3 }
      - *Nop
      - *Nop
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_jtrue
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { j: true }
      - *Nop
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_w2_jtrue
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: 2, j: true }
      - *Nop
      - *Nop

  - Name: SingleThreadUpdate_wmajority
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: majority, j: false }
      - *Nop

  - Name: SingleThreadUpdate_wmajority_jtrue
    Type: RunCommand
    Threads: 1
    Database: test
    Phases:
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - *Nop
      - Repeat: 500
        Operations:
        - OperationCommand:
            update: *Collection
            updates: [ { q: { _id: 1 }, u: { $inc: { n: 1 } } } ]
            writeConcern:  { w: majority, j: true }

