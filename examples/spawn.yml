# Example workload for the spawn node functionality. The spawn creates
# a new thread of execution
#
# The sleep1, sleep2 nodes will be executed once, in parallel with the
# other activity.  
#
# The sleep 3 node will be executed repeated, but by more and more
# threads, as sleep 3 is in a self loop.
# 
# The spawn workload is the demonstration. The main workload wraps the
# spawn workload and performs some checks


delay: &delay 100

spawn: &spawn 
  runLength: 1
  nodes: 
    - name: spawn1
      type: spawn
      spawn: sleep1 # Spawns one new thread. 
      next: spawn2 # Main thread continues on to spawn2
    - name: spawn2
      type: spawn
      spawn: # Spawns a thread for each node in the list
        - sleep2
        - sleep3
      next: spawn3 # Main thread continues on
    - name: spawn3
      type: spawn
      spawn: sleep4
      next: keepspawning # keepspawning loops back to this spawn
    - name: keepspawning
      type: sleep
      sleep: *delay
      print: Going to spawn again
      next: spawn3
    - name: sleep1
      type: sleep
      print: sleep1
      sleep: *delay
    - type: insert_one
      document: {x : 1}
      next: Finish
    - name: sleep2
      type: sleep
      print: sleep2
      sleep: *delay
    - type: insert_one
      document: {x : 2}
      next: Finish
    - name: sleep3
      type: sleep
      print: sleep3
      sleep: *delay
    - type: insert_one
      document: {x : 3}
      next: sleep3
    - name: sleep4
      type: sleep
      print: sleep4
      sleep: *delay
    - type: insert_one
      document: {x : 4}
      next: sleep4 # Two node loop
    
main:
  nodes:
    - type: drop
    - type: workloadNode
      workload: *spawn
    - type: count
      filter: {x : 1}
      assertEquals : 1
    - type: count
      filter: {x : 2}
      assertEquals : 1
    - type: count
      filter: {x : 3}
      assertEquals : 9
    - type: count
      filter: {x : 4}
      assertEquals : 45