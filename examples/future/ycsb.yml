numdocs: &numdocs 10000000
thread_count: &thread_count 10
docs_per_thread: &docs_per_thread 1000000
read_ratio: &read_ratio 0.5
write_ratio: &write_ratio 0.5
insert_ratio: &insert_ratio 0
operation_count: &operation_count 1000000
max_execution_time: &max_execution_time 100000
field_length: &field_length 100

doc: &document
  _id: {$concatenate: {parts: [user, {$increment: {variable: document_count}}]}}
  field1: &field {$randomstring: {length: *field_length}}
  field2: *field
  field3: *field
  field4: *field
  field5: *field
  field6: *field
  field7: *field
  field8: *field
  field9: *field
  field10: *field

update_document: &update_document
  $set:
    field1: *field
    field2: *field
    field3: *field
    field4: *field
    field5: *field
    field6: *field
    field7: *field
    field8: *field
    field9: *field
    field10: *field

mock_insert:
  name: mock_insert
  threads: *thread_count
  runLengthMs: *max_execution_time
  wvariables:
    document_count: 0 # How many documents have we added
  nodes:
    - type: ForN
      N: *docs_per_thread
      node: doc_noop
      next: Finish
    - 
      name: doc_noop
      type: noop
      doc: *document
      next: Finish

insert_phase: &insertphase
  name: insert_phase
  threads: *thread_count
  runLengthMs: *max_execution_time
  # Should this be a workloadvariable? We could parallelize if so
  wvariables:
    document_count: 0 # How many documents have we added
  nodes:
    - type: ForN
      N: *docs_per_thread
      node: insert
      next: Finish
    - &insert
      name: insert
      type: insert_one
      document: *document
      next: Finish

run_phase: &runphase
  name: run_phase
  runLengthMs: *max_execution_time
  threads: *thread_count
  wvariables:
    document_count: *numdocs
  nodes:
    - type: ForN
      N: *operation_count
      node: choice
      next: Finish
    - name: choice
      type: random_choice
      next:
        insert: *insert_ratio
        read: *read_ratio
        write: *write_ratio
    - *insert
    - name: read
      type: find
      filter: &filter {_id: {$concatenate: {parts: [user, {$randomint: {max: {$usevar: {variable: document_count}}}}]}}}
      #filter with zipfian below
      #filter: {$concatenate: {parts: [user, {$randomint: {distribution: zipfian, max: {$usevar: {variable: document_count}}}}]}}
      next: Finish
    - name: write
      type: update_one
      filter: *filter
      update: *update_document
      next: Finish

main:
  seed: 123141515
  nodes:
    - type: drop
    - type: workloadNode
      workload: *insertphase
    - type: workloadNode
      workload: *runphase
